(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{362:function(t,s,a){"use strict";a.r(s);var e=a(5),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"遇到问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遇到问题"}},[t._v("#")]),t._v(" 遇到问题")]),t._v(" "),s("p",[t._v("项目的客户端和服务器之间有ws长连接,当执行某些业务操作时，需要通过ws的readyState属性去获取ws的连接状态,当ws连接时发送ws请求,ws连接断开时给与提示\n现在发现当客户端网络出现问题中断时,获取ws的readyState仍然为true,但是此时ws请求已经无法发送了")]),t._v(" "),s("h2",{attrs:{id:"排查原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排查原因"}},[t._v("#")]),t._v(" 排查原因")]),t._v(" "),s("p",[t._v("当客户端主动调用ws的close方法时，readyState的值会直接发生变化\n而当网络中断时，readyState值的并没有实时变化，而是等到onclose回调触发后才会变化")]),t._v(" "),s("h2",{attrs:{id:"解决方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),s("p",[t._v("增加心跳机制, 客户端向服务端发送心跳, 当客户端在若干时间后未收到心跳回复则认为连接断开，主动调用close方法，并触发重连。")])])}),[],!1,null,null,null);s.default=r.exports}}]);